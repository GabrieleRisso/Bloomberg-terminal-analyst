#! /bin/bash
source ~/anaconda3/etc/profile.d/conda.sh
conda activate gst

#move this script in game gmaestonkterminal folder. make it executbale with "chmod +x stocksh"

#variables
oggi=$( date -d "today" +"%d_%m_%Y")
#folder where all the visualizable data (like plots and cool stuff is uploded to manual analysis)
#generate the dicovery folder with inside it a daily folder whit name the current date 
mkdir -p $HOME/dailyreport/disc/$oggi/
#folder where the current discovered stocks will be outputted
disc="$HOME/dailyreport/disc/$oggi"


#   undervalue                                        Potential Undervalued stocks
#   oversold_under_3dol                               Oversold Under $3
#   modified_dreman                                   Modified Version of the Dreman Screener.
#   potential_reversals                               Potential Reversals
#   death_cross                                       When the 50 sma crosses below the 200 sma. More information can be found in https://www.investopedia.com/terms/d/deathcross.asp
#   modified_neff                                     Neff Screener with modifications // operational margin <50%. More information can be found in https://marketxls.com/template/neff-screen/
#   template                                          Template with all available filters and their options menu. More information can be found in https://finviz.com/help/screener.ashx and https://finviz.com/help/technical-analysis/charts-patterns.ashx
#   top_performers_tech                               Top performers (tech)
	#   sexy_year                                         This is just a sample. The user that adds the preset can add a description for what type of stocks these filters are aimed for
#   golden_cross_penny                                Golden Cross
#   continued_momentum_scan                           Continued Momentum Scan
#   top_performers_healthcare                         Top performers (Healthcare)
	#   buffett_like                                      Buffet like value screener (Value invsting for long term growth)
#   5pct_above_low                                    5% Above Low
	#   rosenwald_gtfo                                    Too many indicators indicating an impending crash.
#   oversold_under_5dol                               Oversold Under $5
#   stocks_strong_support_levels                      Stocks Strong Support Levels
#   cheap_dividend                                    Cheap dividend stocks
#   top_performers_all                                Top performers (ALL)
#   golden_cross                                      Golden Cross when the 50 day moves above the200 day from below.
#   value_stocks                                      Value Stocks
	#   oversold                                          Oversold
#   channel_up_and_low_debt_and_sma_50and200          (Channel Up, Low Debt, Above 50 & 200 SMA)
#   cheap_bottom_dividend                             High Yield Dividend stonks that are at-or-near their lowest price. Inverse Head and shoulders pattern recognized.
#   recent_growth_and_support                         Recent Growth, Support
#   high_vol_and_low_debt                             High Volume, NEW Volume, Low Debt
#   heavy_inst_ins                                    Heavily owned by institutions and insiders (>30% each)
#   short_squeeze_scan                                Short Squeeze Scan
#   growth_stocks                                     Growth Stocks
#   simplistic_momentum_scanner_under_7dol            Simplistic Momentum Scanner Under $7
#   cheap_oversold                                    Cheap stonks that are oversold: under 10% above the low, and oversold on the RSI.
#   rosenwald                                         The "classic rosenwald" screen based on some dude i work with best guess.
#   news_scanner                                      News Scanner
#   unusual_volume                                    Unusual Volume
#   analyst_strong_buy                                Analyst Strong Buy
#   under_15dol_stocks                                Under $15 Stocks
#   bull_runs_over_10pct                              Bull runs over 10%
#   break_out_stocks                                  Break out Stocks
#   weak_support_and_top_performers                   (Weak Support Trendlines, Top Performers)

#Default Presets:
#   top_gainers                                       stocks with the highest %% price gain today
	#   top_losers                                        stocks with the highest %% price loss today
#   new_high                                          stocks making 52-week high today
	#   new_low                                           stocks making 52-week low today
#   most_volatile                                     stocks with the highest widest high/low trading range today
#   most_active                                       stocks with the highest trading volume today
#   unusual_volume                                    stocks with unusually high volume today - the highest relative volume ratio
	#   overbought                                        stock is becoming overvalued and may experience a pullback.
#   oversold                                          oversold stocks may represent a buying opportunity for investors
	#   downgrades                                        stocks downgraded by analysts today
#   upgrades                                          stocks upgraded by analysts today
#   earnings_before                                   companies reporting earnings today, before market open
#   earnings_after                                    companies reporting earnings today, after market close
#   recent_insider_buying                             stocks with recent insider buying activity
	#   recent_insider_selling                            stocks with recent insider selling activity
#   major_news                                        stocks with the highest news coverage today
#   horizontal_sr                                     horizontal channel of price range between support and resistance trendlines
	#   tl_resistance                                     once a rising trendline is broken
#   tl_support                                        once a falling trendline is broken
#  wedge_up                                          upward trendline support and upward trendline resistance (reversal)
#   wedge_down                                        downward trendline support and downward trendline resistance (reversal)
#   wedge                                             upward trendline support, downward trendline resistance (contiunation)
#   triangle_ascending                                upward trendline support and horizontal trendline resistance
	#   triangle_descending                               horizontal trendline support and downward trendline resistance
#   channel_up                                        both support and resistance trendlines slope upward
#   channel_down                                      both support and resistance trendlines slope downward
#   channel                                           both support and resistance trendlines are horizontal
	#   double_top                                        stock with 'M' shape that indicates a bearish reversal in trend
#   double_bottom                                     stock with 'W' shape that indicates a bullish reversal in trend
#   multiple_top                                      same as double_top hitting more highs
#   multiple_bottom                                   same as double_bottom hitting more lows
	#   head_shoulders                                    chart formation that predicts a bullish-to-bearish trend reversal
#   head_shoulders_inverse                            chart formation that predicts a bearish-to-bullish trend reversal



function scr {
set=("undervalue" "oversold_under_3dol" "modified_dreman" "potential_reversals" "death_cross" "modified_neff" "top_performers_tech" "golden_cross_penny" "continued_momentum_scan" "top_performers_healthcare" "5pct_above_low" "oversold_under_5dol" "stocks_strong_support_levels" "cheap_dividend" "top_performers_all" "golden_cross" "value_stocks" "channel_up_and_low_debt_and_sma_50and200" "cheap_bottom_dividend" "recent_growth_and_support" "high_vol_and_low_debt" "heavy_inst_ins" "short_squeeze_scan" "growth_stocks" "simplistic_momentum_scanner_under_7dol" "cheap_oversold" "rosenwald" "news_scanner" "unusual_volume" "analyst_strong_buy" "under_15dol_stocks" "bull_runs_over_10pct" "break_out_stocks" "weak_support_and_top_performers" "top_gainers" "new_high" "most_volatile" "most_active" "unusual_volume" "oversold" "upgrades" "earnings_before" "earnings_after" "recent_insider_buying" "major_news" "horizontal_sr" "tl_support" "wedge_up" "wedge_down" "wedge" "triangle_ascending" "channel_up" "channel_down" "channel" "double_bottom" "multiple_top" "multiple_bottom" "head_shoulders_inverse")
limit=15
#command
for i in "${set[@]}"; do
output=$(./terminal.py "/stocks/scr/set $i/overview -l $limit -s Market Cap --export csv/exit")
#find the path of the output file
path=$(echo "$output" | grep -Eo  "$HOME/GamestonkTerminal/exports/stocks/screener/overview_[0-9]*_[0-9]*.csv" | head -n 1)
echo "path is : "$path""
mv "$path" $disc/${i}.csv
echo "${i} ok"
done
}
function findbest {

mkdir -p $disc/output/
touch $disc/occurrance.txt
python - << END_SCRIPT
import pandas as pd
import glob

path = r'$disc/' # use your path
all_files = glob.glob(path + "/*.csv")

li = []

for filename in all_files:
    df = pd.read_csv(filename, index_col=None, header=0)
    li.append(df)

frame = pd.concat(li, axis=0, ignore_index=True)

frame.to_csv(r'$disc/output/discoveryALL.csv', index=False)


frame['Ticker'].value_counts().reset_index().to_csv('$disc/output/occurrance.csv')

print(frame['Industry'].value_counts())
print(frame['Ticker'].value_counts())


END_SCRIPT

}
function trending() {
output=$(./terminal.py "/stocks/ba/load ${i}/trending")
#extract the terminal output. extract top value query names, remove excess word and genrate a new list of stock to be checked
echo "${output}" > "${disc}"/trending.txt
echo "ok"

#put it some arrays
#trending_ticker=($(awk -F "\"*|\"*" '{print $1}' "${disc}"/trending.txt ))  #to check clumn number 0 or 1 
#trending_wlcount=($(awk -F "\"*|\"*" '{print $2}' "${disc}"/trending.txt )) 

#usage: trending [-h]
#Tickers trending on Stocktwits
#?????????????????????????????????????????????????????????????????????????????
#? Ticker ? Watchlist Count ? Name                                           ?
#?????????????????????????????????????????????????????????????????????????????
#? RBLX   ? 57121           ? Roblox                                         ?
#?????????????????????????????????????????????????????????????????????????????

##to be added to popular + trend + trending array
}
function popular() {
#no table output

limit=25 #the bigger the better)
number=50 #post number for every subs
#subreddits="pennystocks, RobinHoodPennyStocks, Daytrading, StockMarket, stocks, investing, wallstreetbets" #can be changed
#very time long

output=$(./terminal.py "/stocks/ba/popular -l ${limit} -n ${number}/exit")
#there is no export function so i do it:


(echo "${output}" | sed '/├/d;/┏/,/└/!d;/┏/d;/┡/d;/└/d;s/│/,/g;s/┃/,/g') > "${disc}"/popular.csv
echo "popular ok"
} #need reddit api
function trending() { #to finde new stocks to add  to disc
output=$(./terminal.py "/stocks/ba/trending/exit")
#extract the terminal output. extract top value query names, remove excess word and genrate a new list of stock to be checked
(echo "${output}" | sed '/├/d;/┏/,/└/!d;/┏/d;/┡/d;/└/d;s/│/,/g;s/┃/,/g') > "${disc}"/trending.csv
echo "trending ok"
}
function jimcra() {
output=$(./terminal.py "/stocks/ba/load "${i}"/jcdr/exit")
(echo "${output}" | sed '/├/d;/┏/,/└/!d;/┏/d;/┡/d;/└/d;s/│/,/g;s/┃/,/g') > "${disc}"/jimcra.csv
echo "jim cra ok"
}


#export -f jimrec
#export -f popular
#export -f trend
#export -f trending

scr
findbest
#./screener  183,33s user 58,07s system 98% cpu 4:05,65 total


